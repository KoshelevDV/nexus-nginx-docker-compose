map $host $default_docker_repo {
  ~(.*)\.koshelev\.site "$1-docker-group";
  default           "common-docker-group";
}

map $upstream_http_Location $location {
  '' '';
  ~^/v2(/.*) "/v2/$docker_repo$1";
  default $upstream_http_Location;
}

map $uri $tryrepo {
  ~^/v2/([^/]+-docker-[^/]+)/.* $1 ;
  default "$default_docker_repo";
}

server {
  listen 80 default_server;
  server_name example.com;

  location / {
    return 302 https://$host$request_uri;
  }
}

server {
  listen 443 ssl;
  server_name example.com;
  ssl_certificate /tls/cert.pem;
  ssl_certificate_key /tls/privkey.pem;
  ssl_session_cache shared:SSL:1m;
  ssl_session_timeout 10m;
  ssl_protocols TLSv1.2 TLSv1.3;
  # ssl_ciphers PROFILE=SYSTEM;
  # ssl_prefer_server_ciphers on;

  location = /v2/token {
    rewrite ^ /repository/$default_docker_repo/v2/token last;
  }

  location /v2/repository {
    rewrite ^/v2/repository/(.*) /v2/$1 last;
  }

  location /v2/ {
    set $docker_repo $tryrepo;
    rewrite ^/v2(/[^/]+-docker-[^/]+)?/(.*) /repository/$docker_repo/v2/$2;
  }

  location / {
    proxy_pass http://nexus:8081/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto "https";
    proxy_hide_header Location;
    add_header Location "$location" always;
  }

}